@model ikt.Models.Project

@{
    ViewBag.Title = "Lägger till Projekt";
    ViewBag.Staff = Login.GetStaffInfo(User.Identity.Name);
    if (ViewBag.Staff.Username == "invalid")
    {
        Response.Redirect(Url.Action("Create", "Staffs", new { Username = User.Identity.Name.Split('@')[0] }));
    }
}

<h2>@ViewBag.Title</h2>

<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label" })

                <input type="text" class="form-control" id="SubjectID" required />
                <script type="text/javascript">
                    var subject = 12;
                </script>
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label">Klass</label>
                <input type="text" class="form-control" id="ClassID" required />
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PDF, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PDF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PDF, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "12" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                <input type="text" class="form-control" placeholder="Välj datum" name="Date" id="Date" required readonly />
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <input type="text" name="CreatedDate" id="CreatedDate" value="@DateTime.Now" hidden required />
    <input type="text" name="CreatedBy" id="CreatedBy" value="@ViewBag.Staff.Username" hidden required />
    <input type="text" name="UpdatedDate" id="UpdatedDate" value="@DateTime.Now" hidden required />
    <input type="text" name="UpdatedBy" id="UpdatedBy" value="@ViewBag.Staff.Username" hidden required />

    <div class="form-group">
        @Html.ActionLink("Tillbaka", "Index", "Home", null, new { @class = "btn btn-default" })
        <input type="submit" value="Skapa" class="btn btn-default" />
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
