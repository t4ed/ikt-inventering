@model ikt.Models.Project
@{
    ViewBag.Title = "Redigera";
}

<h2>@ViewBag.Title</h2>
<h4>Projekt</h4>
<hr />

@using (Html.BeginForm("Edit", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label" })
                <input type="text" class="form-control" id="SubjectID" name="SubjectID" value="@Model.Subject.Name" required />
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
            @if (!string.IsNullOrEmpty(Model.PDF))
            {
                <div class="form-group">
                    <label for="PDF">Uppladdad PDF</label>
                    <dd>
                        <a href="@Url.Content(Constants.FilePath + Model.PDF)" target="_blank">
                            Visa PDF (öppnas i ny flik)
                        </a>
                    </dd>
                    @Html.HiddenFor(model => model.PDF)
                </div>
            }
            <div class="form-group">
                <label for="file">Ny PDF</label>
                <input type="file" name="file" id="file" class="form-control" accept=".pdf" />
                @Html.ValidationMessageFor(model => model.PDF, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "9" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.CreatedDate)
        @{
            string username = (string)HttpContext.Current.Session["Username"];
        }
        <input type="text" name="UpdatedBy" id="UpdatedBy" value="@username" hidden required />
    </div>
    <div class="form-group">
        <a href="@Url.Action("Details","Projects",new { id = Model.ID })" class="btn btn-default"><i class="fas fa-arrow-left"></i> Tillbaka</a>
        <button type="submit" class="btn btn-default"><i class="fas fa-save"></i> Spara</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
