@using ikt.Models
@model ikt.ViewModels.ProjectDetailsViewModel

@{
    ViewBag.Title = "Projekt";
}

<h2>@Html.DisplayFor(model => model.Project.Name)</h2>
<h4>@ViewBag.Title</h4>
<hr />
<div class=" col-md-12">
    <div class="col-md-3">
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Subject.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Subject.Name)
                </dd>
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Name)
                </dd>
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Grade)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Grade)
                </dd>
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    Lärare
                </dt>
                @foreach (var staff in Model.ProjectStaff)
                {
                    <dd>
                        @staff.Staff.FirstName @staff.Staff.LastName
                    </dd>
                }
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    Klasser
                </dt>
                @foreach (var klass in Model.ProjectClass)
                {
                    <dd>
                        @klass.Class.Name
                    </dd>
                }
            </dl>
        </div>
    </div>
    <div class="col-md-9">
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Description)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Description)
                </dd>
            </dl>
        </div>
        @if (!string.IsNullOrEmpty(Model.Project.PDF))
        {
            <div class="form-group">
                <dl>
                    <dt>
                        @Html.DisplayNameFor(model => model.Project.PDF)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Project.PDF)
                    </dd>
                </dl>
            </div>
        }
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Date)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Date)
                </dd>
            </dl>
        </div>
    </div>
</div>
@{
    ikt.DAL.iktContext iktContext = new ikt.DAL.iktContext();
    string username = (string)HttpContext.Current.Session["Username"];
    Staff currentStaff = iktContext.Staff.Where(s => s.Username == username).Single();
    ProjectStaff projectStaff = iktContext.ProjectStaffs.Where(s => s.ProjectID == Model.Project.ID && s.StaffID == currentStaff.ID).SingleOrDefault();
}

<div class="form-group btn-StickBottom">
    @Html.ActionLink("Tillbaka", "Index", "Home", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Redigera", "Edit", new { id = Model.Project.ID }, new { @class = "btn btn-default" })
    @if (projectStaff == null)
    {
        @Html.Raw(" ")
        @Html.ActionLink("Lägg till mig i projektet!", "AddStaff", new { staffID = currentStaff.ID, projectID = Model.Project.ID }, new { @class = "btn btn-success" })
    }
    else
    {
        @Html.Raw(" ")
        @Html.ActionLink("Ta bort mig från projektet!", "RemoveStaff", new { id = projectStaff.ID, projectID = Model.Project.ID }, new { @class = "btn btn-danger" })
    }
</div>
