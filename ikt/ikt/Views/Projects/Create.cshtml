@model ikt.Models.Project

@{
    ViewBag.Title = "Projekt";
    ViewBag.Staff = Login.GetStaffInfo(User.Identity.Name);
    if (ViewBag.Staff.Username == "invalid")
    {
        Response.Redirect(Url.Action("Create", "Staffs", new { Username = User.Identity.Name.Split('@')[0] }));
    }
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
//<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PDF, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PDF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PDF, "", new { @class = "text-danger" })
    </div>


    <input type="text" name="CreatedDate" id="CreatedDate" value="@DateTime.Now" hidden required />
    <input type="text" name="CreatedBy" id="CreatedBy" value="@ViewBag.Staff.Username" hidden required />
    <input type="text" name="UpdatedDate" id="UpdatedDate" value="@DateTime.Now" hidden required />
    <input type="text" name="UpdatedBy" id="UpdatedBy" value="@ViewBag.Staff.Username" hidden required />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
//</div>
}

<div>
    @Html.ActionLink("Tillbaka", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
