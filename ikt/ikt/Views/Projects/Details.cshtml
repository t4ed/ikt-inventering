@using ikt.Models
@model ikt.ViewModels.ProjectDetailsViewModel

@{
    ViewBag.Title = "Projekt";
}


<h2>@Html.DisplayFor(model => model.Project.Name)</h2>
<h4>@ViewBag.Title</h4>
<hr />
<script src="/Scripts/pdf.js"></script>

<script>
    // If absolute URL from the remote server is provided, configure the CORS
    // header on that server.
    var url = "/Content/ProjectFiles/@Model.Project.PDF";

    // Disable workers to avoid yet another cross-origin issue (workers need
    // the URL of the script to be loaded, and dynamically loading a cross-origin
    // script does not work).
    //PDFJS.disableWorker = true;

    // The workerSrc property shall be specified.
    PDFJS.workerSrc = '/Scripts/pdf.worker.js';

    // Asynchronous download of PDF
    var loadingTask = PDFJS.getDocument(url);
    loadingTask.promise.then(function (pdf) {
        console.log('PDF loaded');

        // Fetch the first page
        var pageNumber = 1;
        pdf.getPage(pageNumber).then(function (page) {
            console.log('Page loaded');

            var scale = 1.5;
            var viewport = page.getViewport(scale);

            // Prepare canvas using PDF page dimensions
            var canvas = document.getElementById('the-canvas');
            var context = canvas.getContext('2d');
            canvas.height = viewport.height;
            canvas.width = viewport.width;

            // Render PDF page into canvas context
            var renderContext = {
                canvasContext: context,
                viewport: viewport
            };
            var renderTask = page.render(renderContext);
            renderTask.then(function () {
                console.log('Page rendered');
            });
        });
    }, function (reason) {
        // PDF loading error
        console.error(reason);
    });
</script>

<div class=" col-md-12">
    <div class="col-md-2">
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Subject.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Subject.Name)
                </dd>
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Grade)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Grade)
                </dd>
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    Lärare
                </dt>
                @foreach (var staff in Model.ProjectStaff)
                {
                    <dd>
                        @staff.Staff.FirstName @staff.Staff.LastName
                    </dd>
                }
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    Klasser
                </dt>
                @foreach (var klass in Model.ProjectClass)
                {
                    <dd>
                        @klass.Class.Name
                    </dd>
                }
            </dl>
        </div>
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Date)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Project.Date)
                </dd>
            </dl>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group">
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Project.Description)
                </dt>
                <dd class="descriptionBreaker">
                    @Html.DisplayFor(model => model.Project.Description)
                </dd>
            </dl>
        </div>
        @if (!string.IsNullOrEmpty(Model.Project.PDF))
        {
            <div class="form-group">
                <dl>
                    <dt>
                        @Html.DisplayNameFor(model => model.Project.PDF)
                    </dt>
                    <dd>
                        <a href="@Url.Content(Constants.FilePath + Model.Project.PDF)" target="_blank">
                            Visa PDF (öppnas i ny flik)
                        </a>
                    </dd>
                </dl>
            </div>
        }
    </div>
    <div class="col-md-5">
        <div class="form-group">
            @if (!string.IsNullOrEmpty(Model.Project.PDF))
            {
                <canvas id="the-canvas" class="col-md-12"></canvas>
            }
        </div>
    </div>
</div>
@{
    ikt.DAL.iktContext iktContext = new ikt.DAL.iktContext();
    string username = (string)HttpContext.Current.Session["Username"];
    Staff currentStaff = iktContext.Staff.Where(s => s.Username == username).Single();
    ProjectStaff projectStaff = iktContext.ProjectStaffs.Where(s => s.ProjectID == Model.Project.ID && s.StaffID == currentStaff.ID).SingleOrDefault();
}

<div class="form-group btn-StickBottom">
    <a href="@Url.Action("Index", "Home")" class="btn btn-default buttonStyle"><i class="fas fa-arrow-left"></i> Tillbaka</a>
    <a href="@Url.Action("Edit", new { id = Model.Project.ID })" class="btn btn-default buttonStyle"><i class="fas fa-edit"></i> Redigera</a>
    @if (projectStaff == null)
    {
        @Html.Raw(" ")
        <a href="@Url.Action("AddStaff", new { staffID = currentStaff.ID, projectID = Model.Project.ID })" class="btn btn-success buttonStyle">
            <i class="fas fa-user-plus"></i> Lägg till mig i projekt
        </a>
    }
    else
    {
        @Html.Raw(" ")
        <a href="@Url.Action("RemoveStaff", new { id = projectStaff.ID, projectID = Model.Project.ID })" class="btn btn-danger buttonStyle">
            <i class="fas fa-user-times"></i> Ta bort mig från projektet
        </a>
    }
    @Html.Raw(" ")
    <button type="button" class="btn btn-danger buttonStyle" data-toggle="modal" data-target="#myModal"><i class="fas fa-trash-alt"></i> Ta bort projektet</button>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-danger">Varning!</h4>
            </div>
            <div class="modal-body">
                <h4>Är du säker på att du vill ta bort projektet @Model.Project.Name?</h4>
            </div>
            <div class="modal-footer">
                <a href="@Url.Action("Delete",new { id = Model.Project.ID })" class="btn btn-danger"><i class="fas fa-trash-alt"></i> Ta bort</a>
                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fas fa-times"></i> Stäng</button>
            </div>
        </div>

    </div>
</div>