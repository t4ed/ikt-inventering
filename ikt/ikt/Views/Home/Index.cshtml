

@model ikt.ViewModels.SearchIndexViewModel
@using PagedList.Mvc
@using ikt.Models
@{
    ViewBag.Title = "Startsida";
}
<div class="search">
    @using (Html.BeginRouteForm("Default", FormMethod.Get))
    {
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="input-group">
                    <input type="text" class="form-control searchBar" id="Search" name="Search" placeholder="Search" value="@Model.Search">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <label>Ämnen: </label>
                @Html.DropDownList("SubjectID", null, "Alla", htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <label>Årskurs: </label>
                @Html.DropDownListFor(vm => vm.Grade, new SelectList(Model.GradeList, "Value", "Key"), "Alla", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                <label>Sortera: </label>
                @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sort, "Value", "Key"), "-", new { @class = "form-control" })
            </div>
        </div>

    }
</div>

<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Visar " : "Du sökte efter " + Model.Search + ", hittade ") @Model.SearchResult.TotalItemCount resultat.
</p>

@Html.PagedListPager(Model.SearchResult, page => Url.Action("Index",
     new
     {
         search = Model.Search,
         subjectID = Model.SubjectID,
         sortBy = Model.SortBy,
         grade = Model.Grade,
         page
     }))
<div class="row">
    <div class="grid-container col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @foreach (var item in Model.SearchResult)
        {
            <div class="item">
                <a href="@Url.Action("Details", item.Type + "s", new {id=item.ItemID })">
                    <div class="card">
                        <h3>@Html.DisplayFor(modelItem => item.Name)</h3>
                        @if (item.Grade > 0)
                        {@Html.Raw("Årskurs ") @Html.DisplayFor(modelItem => item.Grade)<br />}
                        
                        @if (!string.IsNullOrEmpty(item.Subject))
                        {@Html.DisplayFor(modelItem => item.Subject)<br />}
                        
                        @if (item.Type == "Ikt")
                        {
                            if (item.Description.Length <= Constants.DescriptionLengthIndex)
                            {
                                @Html.Raw(item.Description)
                            }
                            else
                            {
                                @(item.Description.Substring(0, Constants.DescriptionLengthIndex) + "...")
                            }
                            <i class="fas fa-cogs"></i>
                        }
                        else
                        {
                            <i class="fas fa-file-alt"></i>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
</div>